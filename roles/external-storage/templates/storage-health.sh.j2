#!/bin/bash
# External Storage Health Monitoring Script
# Generated by Ansible - roles/external-storage

STORAGE_PATH="{{ external_storage.mount_point }}"
LOG_DIR="{{ external_storage.mount_point }}/{{ external_storage.storage_structure.logs }}"
HEALTH_LOG="$LOG_DIR/storage-health.log"
TEMP_THRESHOLD={{ external_storage.intel_optimizations.thermal_threshold | default(50) }}

# Ensure log directory exists
mkdir -p "$LOG_DIR"

# Function to log with timestamp
log_message() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$HEALTH_LOG"
}

# Function to check if storage is mounted
check_mount() {
    if [ ! -d "$STORAGE_PATH" ] || [ -z "$(ls -A "$STORAGE_PATH" 2>/dev/null)" ]; then
        log_message "ERROR: External storage not mounted at $STORAGE_PATH"
        return 1
    else
        log_message "INFO: External storage mounted and accessible"
        return 0
    fi
}

# Function to check disk space
check_disk_space() {
    local usage=$(df -h "$STORAGE_PATH" | awk 'NR==2 {print $5}' | sed 's/%//')
    local available=$(df -h "$STORAGE_PATH" | awk 'NR==2 {print $4}')
    
    log_message "INFO: Disk usage: ${usage}%, Available: $available"
    
    if [ "$usage" -gt {{ external_storage.storage_quotas.warning_threshold | default(80) }} ]; then
        log_message "WARNING: Disk usage above {{ external_storage.storage_quotas.warning_threshold | default(80) }}% (${usage}%)"
    fi
    
    if [ "$usage" -gt {{ external_storage.storage_quotas.critical_threshold | default(90) }} ]; then
        log_message "CRITICAL: Disk usage above {{ external_storage.storage_quotas.critical_threshold | default(90) }}% (${usage}%)"
    fi
}

# Function to check drive health (if smartmontools is available)
check_drive_health() {
    local device="{{ final_device_path | default('/dev/disk2s1') }}"
    
    if command -v smartctl >/dev/null 2>&1; then
        local smart_status=$(smartctl -H "$device" 2>/dev/null | grep "SMART overall-health" | awk '{print $6}')
        if [ "$smart_status" = "PASSED" ]; then
            log_message "INFO: SMART health check: PASSED"
        else
            log_message "WARNING: SMART health check: $smart_status"
        fi
    else
        log_message "INFO: smartctl not available, skipping SMART health check"
    fi
}

# Function to check thermal status (Intel Mac specific)
check_thermal_status() {
    if command -v osx-cpu-temp >/dev/null 2>&1; then
        local temp=$(osx-cpu-temp | sed 's/째C//')
        log_message "INFO: CPU temperature: ${temp}째C"
        
        if [ "${temp%.*}" -gt "$TEMP_THRESHOLD" ]; then
            log_message "WARNING: High CPU temperature detected: ${temp}째C (threshold: ${TEMP_THRESHOLD}째C)"
            # Optionally reduce I/O operations during high temp
{% if external_storage.intel_optimizations.thermal_aware_io %}
            log_message "INFO: Thermal-aware I/O enabled, reducing background operations"
{% endif %}
        fi
    else
        log_message "INFO: osx-cpu-temp not available, skipping thermal check"
    fi
}

# Function to check directory structure
check_directory_structure() {
    local dirs=(
        "{{ external_storage.storage_structure.camera_footage }}"
        "{{ external_storage.storage_structure.backups }}"
        "{{ external_storage.storage_structure.shared_files }}"
        "{{ external_storage.storage_structure.time_machine }}"
        "{{ external_storage.storage_structure.homeassistant_backups }}"
        "{{ external_storage.storage_structure.container_data }}"
        "{{ external_storage.storage_structure.logs }}"
        "{{ external_storage.storage_structure.temp }}"
    )
    
    local missing_dirs=()
    for dir in "${dirs[@]}"; do
        if [ ! -d "$STORAGE_PATH/$dir" ]; then
            missing_dirs+=("$dir")
            mkdir -p "$STORAGE_PATH/$dir"
            chown {{ ansible_user }}:{{ ansible_user }} "$STORAGE_PATH/$dir"
            log_message "WARNING: Created missing directory: $dir"
        fi
    done
    
    if [ ${#missing_dirs[@]} -eq 0 ]; then
        log_message "INFO: All required directories present"
    else
        log_message "INFO: Created ${#missing_dirs[@]} missing directories"
    fi
}

# Function to check permissions
check_permissions() {
    local owner=$(stat -f "%Su" "$STORAGE_PATH")
    if [ "$owner" != "{{ ansible_user }}" ]; then
        log_message "WARNING: Storage ownership incorrect. Expected: {{ ansible_user }}, Found: $owner"
        # Attempt to fix ownership
        sudo chown -R {{ ansible_user }}:{{ ansible_user }} "$STORAGE_PATH"
        log_message "INFO: Attempted to fix ownership"
    else
        log_message "INFO: Storage ownership correct"
    fi
}

# Main health check routine
main() {
    log_message "=== Starting storage health check ==="
    
    if check_mount; then
        check_disk_space
        check_directory_structure
        check_permissions
        check_drive_health
        check_thermal_status
        log_message "=== Storage health check completed ==="
    else
        log_message "=== Storage health check failed - storage not mounted ==="
        exit 1
    fi
}

# Run main function
main

# If health monitoring is enabled, also output to stdout for cron
if [ "${1:-}" = "--verbose" ]; then
    tail -n 20 "$HEALTH_LOG"
fi