---
# Mac Mini Home Server Setup - Week 1 Foundation
# Foundation and architecture implementation for modular home server deployment

- name: "üèóÔ∏è Foundation - Week 1 Architecture Setup"
  hosts: remote
  gather_facts: yes
  vars:
    system_timezone: "America/Los_Angeles"
  roles:
    # Core system preparation
    - { role: package_manager, tags: ["foundation", "package_manager"] }
    - { role: git, tags: ["foundation", "git"] }
    - { role: zsh, tags: ["foundation", "zsh"] }
    - { role: macos, tags: ["foundation", "macos"] }

- name: "üóÑÔ∏è Storage Infrastructure - External and Network Storage"
  hosts: remote
  roles:
    # Storage foundation - Week 1 implementation
    - { role: external-storage, tags: ["storage", "external-storage"] }
    - { role: network-storage, tags: ["storage", "network-storage"] }
    - { role: backup-storage, tags: ["storage", "backup-storage"] }
    - { role: camera-storage, tags: ["storage", "camera-storage"] }
    - { role: storage-monitoring, tags: ["storage", "storage-monitoring"] }

- name: "‚ö° Intel Optimization - Hardware-Specific Tuning"
  hosts: remote
  roles:
    # Intel Mac Mini optimization - Week 1 implementation  
    - { role: intel-optimization, tags: ["optimization", "intel-optimization"] }
    - { role: orbstack, tags: ["optimization", "orbstack", "containers"] }

- name: "üìä Core Monitoring - Foundation Observability"
  hosts: remote
  roles:
    # Basic monitoring - Week 1 foundation
    - { role: monitoring, tags: ["monitoring", "foundation"] }
    - { role: uptime-kuma, tags: ["monitoring", "uptime-kuma"] }
    - { role: beszel-agent, tags: ["monitoring", "beszel"] }

- name: "üõ†Ô∏è Development Tools - Core Utilities"
  hosts: remote
  roles:
    # Essential CLI tools
    - { role: python, tags: ["utilities", "python"] }
    - { role: mise, tags: ["utilities", "mise"] }
    - { role: rust, tags: ["utilities", "rust"] }
    - { role: vim, tags: ["utilities", "vim"] }
    - { role: eza, tags: ["utilities", "eza"] }
    - { role: bat, tags: ["utilities", "bat"] }
    - { role: rg, tags: ["utilities", "rg"] }
    - { role: fzf, tags: ["utilities", "fzf"] }
    - { role: gsed, tags: ["utilities", "gsed"] }
    - { role: ollama, tags: ["utilities", "ollama", "ai"] }

  post_tasks:
    - name: "üéâ Week 1 Foundation Deployment Complete"
      debug:
        msg: |
          ====================================================================
          üèóÔ∏è MAC MINI HOME SERVER - WEEK 1 FOUNDATION COMPLETE! üèóÔ∏è
          ====================================================================
          
          üóÑÔ∏è Storage Infrastructure:
          ‚Ä¢ External Storage: Auto-mounted at {{ external_storage.mount_point | default('/Volumes/HomeServerStorage') }}
          ‚Ä¢ Network Storage: SMB/AFP/NFS shares configured for Time Machine
          ‚Ä¢ Storage Monitoring: Health checks and cleanup automation active
          
          ‚ö° Intel Optimization:
          ‚Ä¢ Thermal Management: Active monitoring for {{ intel_hardware.cpu_model | default('Intel i7') }}
          ‚Ä¢ Container Runtime: OrbStack optimized for Intel Mac Mini
          ‚Ä¢ Resource Allocation: {{ orbstack_settings.cpu_limit | default(4) }} CPU cores, {{ orbstack_settings.memory_limit | default('6GB') }} RAM
          
          üìä Foundation Monitoring:
          ‚Ä¢ Uptime Monitoring: Basic infrastructure health checks
          ‚Ä¢ Beszel Agent: System metrics collection
          ‚Ä¢ Storage Health: Disk monitoring and alerts
          
          üõ†Ô∏è Development Environment:
          ‚Ä¢ CLI Tools: eza, bat, ripgrep, fzf, mise configured
          ‚Ä¢ AI Tools: Ollama ready for local LLM deployment
          ‚Ä¢ Editor: Vim optimized with snippets and configuration
          
          üìö Week 1 Foundation Summary:
          ‚úÖ Modular role architecture established (12 roles)
          ‚úÖ External storage integration with auto-detection
          ‚úÖ Network storage protocols for Time Machine backup
          ‚úÖ Intel-specific optimizations and thermal management
          ‚úÖ Container runtime optimization (75% RAM reduction vs Docker Desktop)
          ‚úÖ User choice framework with deployment profiles
          
          üîú Ready for Week 2+:
          The foundation supports future implementation of:
          ‚Ä¢ Home automation services (HomeAssistant, Frigate)
          ‚Ä¢ Advanced monitoring (Grafana, Prometheus)
          ‚Ä¢ Network services (AdGuard, Tailscale)
          ‚Ä¢ Security services (Vaultwarden)
          
          ====================================================================
      when: ansible_hostname is defined

# Usage Examples:
#
# Full Week 1 foundation deployment:
# ansible-playbook -i hosts remote_env.yml
#
# Deploy specific infrastructure layers:
# ansible-playbook -i hosts remote_env.yml --tags foundation
# ansible-playbook -i hosts remote_env.yml --tags storage
# ansible-playbook -i hosts remote_env.yml --tags optimization
# ansible-playbook -i hosts remote_env.yml --tags monitoring
#
# Deploy specific components:
# ansible-playbook -i hosts remote_env.yml --tags external-storage
# ansible-playbook -i hosts remote_env.yml --tags intel-optimization
# ansible-playbook -i hosts remote_env.yml --tags orbstack
#
# Foundation + Storage + Optimization:
# ansible-playbook -i hosts remote_env.yml --tags foundation,storage,optimization